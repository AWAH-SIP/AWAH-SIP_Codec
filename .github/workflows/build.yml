name: Build AWAH-SIP Codec
on: [push]
jobs:
  Linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
        
      - name: Build AppImage in Docker
        uses: addnab/docker-run-action@v3
        with:
          registry: ghcr.io
          image: ghcr.io/awah-sip/awah-linux-build:latest
          options: -v ${{ github.workspace }}:/home/root --privileged
          run: ./docker_build/build_AppImage_with_Container.sh
          
      - name: Rename AppImage
        run: sudo mv build/AWAH-SIP_Codec-x86_64.AppImage build/AWAH-SIP_Codec-${{ github.sha }}-x86_64.AppImage
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AWAH-SIP_Codec_${{ github.sha }}-x86_64.AppImage
          path: build/AWAH-SIP_Codec-*-x86_64.AppImage
  
  MacOS:
    runs-on: macos-13
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "5.15.2"
      
      - name: Switch macOS Xcode version with older Qt versions
        run: sudo xcode-select --switch /Applications/Xcode_14.3.1.app
        
      - name: Install Opencore & OpenSSL
        run: brew install opencore-amr opus openssl@1.1

      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
        
      - run:  mkdir build

      - name: QMake
        run: cd build && qmake ../AWAH-SIP_Codec.pro
        
      - name: Make
        run:  cd build && make && mv AWAH-SIP_Codec.app AWAH-SIP_Codec_${{ github.sha }}.app
        
      - name: MacDeployQT
        run:  cd build && macdeployqt AWAH-SIP_Codec_${{ github.sha }}.app -dmg
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AWAH-SIP_Codec_${{ github.sha }}.dmg
          path: build/AWAH-SIP_Codec_*.dmg
        
  Windows:
    runs-on: windows-2019
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: "5.15.2"
          arch: "win32_msvc2019"
        
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: check vcvarsall.bat
        run: dir "%PROGRAMFILES(x86)%\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
        shell: cmd

      - name: QMake & Make
        run: |
          call "%PROGRAMFILES(x86)%\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat"
          ..\Qt\5.15.2\msvc2019\bin\qmake.exe AWAH-SIP_Codec.pro -spec win32-msvc
          nmake
        shell: cmd
        
      - name: WinDeployQT
        run:  md deploy && copy release\AWAH-SIP_Codec.exe deploy\ && windeployqt --release --no-translations --compiler-runtime deploy\AWAH-SIP_Codec.exe
        
      - name: Easy Zip Files
        uses: vimtor/action-zip@v1
        with:
          files: deploy
          dest: AWAH-SIP_Codec-${{ github.sha }}.zip
          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AWAH-SIP_Codec-${{ github.sha }}.zip
          path: AWAH-SIP_Codec-*.zip

  RaspberryPi:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      
      - name: make build directory
        run: sudo mkdir build

      - name: Build AppImage in Docker
        uses: addnab/docker-run-action@v3
        with:
          registry: ghcr.io
          image: ghcr.io/awah-sip/awah-rpi-build:latest
          username: qt
          shell: bash
          options: -v ${{ github.workspace }}:/var/src -v ${{ github.workspace }}/build:/var/build
          run: entrypoint.sh build "DEFINES+=AWAH_libgpiod"
          
      - name: Rename AppImage
        run:  ls build/ && sudo mv build/AWAH-SIP_Codec build/AWAH-SIP_Codec-RPi-${{ github.sha }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: AWAH-SIP_Codec-RPi-${{ github.sha }}
          path: build/AWAH-SIP_Codec-RPi-*

  create_release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - Linux
      - MacOS
      - Windows
      - RaspberryPi
    if: github.ref == 'refs/heads/releng' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Define the release name
        id: release_name
        run: |
          if [ ${GITHUB_REF/refs\/tags\//} != ${GITHUB_REF} ]; then
             echo "RELEASE_NAME=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
          elif [ ${GITHUB_REF/refs\/heads\//} = "releng" ]; then
             echo "RELEASE_NAME=releng" >> $GITHUB_OUTPUT
          else
             echo "RELEASE_NAME=${GITHUB_REF/refs\/heads\//}" >> $GITHUB_OUTPUT
          fi

      - name: Download the image artifacts
        uses: actions/download-artifact@v3

      - name: Display structure of downloaded files
        run: ls -R

      - name: Rename Artifacts
        run: |
          mv AWAH-SIP_Codec_*-x86_64.AppImage AWAH-SIP_Codec_${{ steps.release_name.outputs.RELEASE_NAME }}-x86_64.AppImage
          mv AWAH-SIP_Codec_*.dmg AWAH-SIP_Codec-Mac-${{ steps.release_name.outputs.RELEASE_NAME }}.dmg
          mv AWAH-SIP_Codec-*.zip AWAH-SIP_Codec-Win-${{ steps.release_name.outputs.RELEASE_NAME }}.zip
          mv AWAH-SIP_Codec-RPi-* AWAH-SIP_Codec-RPi-${{ steps.release_name.outputs.RELEASE_NAME }}

      - name: Create release with releng image
        if: github.ref == 'refs/heads/releng'
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          draft: true
          title: "Prerelease"
          files: |
            AWAH-SIP_Codec_${{ steps.release_name.outputs.RELEASE_NAME }}-x86_64.AppImage
            AWAH-SIP_Codec-Mac-${{ steps.release_name.outputs.RELEASE_NAME }}.dmg
            AWAH-SIP_Codec-Win-${{ steps.release_name.outputs.RELEASE_NAME }}.zip
            AWAH-SIP_Codec-RPi-${{ steps.release_name.outputs.RELEASE_NAME }}

      - name: Create release with release image
        if: startsWith(github.ref, 'refs/tags/')
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ steps.release_name.outputs.RELEASE_NAME }}
          prerelease: false
          draft: true
          title: ${{ steps.release_name.outputs.RELEASE_NAME }}
          files: |
            AWAH-SIP_Codec_${{ steps.release_name.outputs.RELEASE_NAME }}-x86_64.AppImage
            AWAH-SIP_Codec-Mac-${{ steps.release_name.outputs.RELEASE_NAME }}.dmg
            AWAH-SIP_Codec-Win-${{ steps.release_name.outputs.RELEASE_NAME }}.zip
            AWAH-SIP_Codec-RPi-${{ steps.release_name.outputs.RELEASE_NAME }}
